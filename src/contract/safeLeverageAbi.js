export const SafeLeverageAbi = [
  {
    type: "constructor",
    payable: false,
    inputs: [
      { type: "address", name: "_mainTokenAddress" },
      { type: "address", name: "_uniswapRouterAddress" },
      { type: "address", name: "_USDCAddress" },
      { type: "address", name: "_treasuryWalletAddress" },
      { type: "address", name: "_marketingWalletAddress" },
      { type: "address", name: "_liquidityWalletAddress" },
      { type: "address", name: "_bondDepoWalletAddress" },
      { type: "address", name: "_secondServiceWalletAddress" },
      { type: "address", name: "_thirdServiceWalletAddress" },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "IncreaseCollateral",
    inputs: [
      { type: "address", name: "msgSender", indexed: false },
      {
        type: "uint256",
        name: "_collateralFromWallet",
        indexed: false,
      },
      { type: "uint256", name: "_collateralFromBonds", indexed: false },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "IncreaseLeverage",
    inputs: [
      { type: "address", name: "msgSender", indexed: false },
      {
        type: "uint256",
        name: "leveragePercentageBPS",
        indexed: false,
      },
      { type: "bool", name: "buyTokens", indexed: false },
      { type: "uint256", name: "minimumTokensToBuy", indexed: false },
      { type: "uint256", name: "minimumTokensToBond", indexed: false },
      { type: "uint256", name: "bondID", indexed: false },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "OwnershipTransferred",
    inputs: [
      { type: "address", name: "previousOwner", indexed: true },
      { type: "address", name: "newOwner", indexed: true },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "changeAssetManagerAddress",
    inputs: [
      { type: "address", name: "_addr", indexed: true },
      { type: "bool", name: "_isAssetManager", indexed: false },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "changeEcosystemAddress",
    inputs: [
      { type: "address", name: "_addr", indexed: true },
      { type: "bool", name: "_isEcosystem", indexed: false },
    ],
  },
  {
    type: "function",
    name: "_changeAssetManagerList",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "_addr" },
      { type: "bool", name: "_access" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "_changeEcosystemList",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "_addr" },
      { type: "bool", name: "_access" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "changeAssetManagerList",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "_addr" },
      { type: "bool", name: "_access" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "changeEcosystemList",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "_addr" },
      { type: "bool", name: "_access" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "createLeverage",
    constant: false,
    payable: false,
    inputs: [
      { type: "uint256", name: "_collateralFromWallet" },
      { type: "uint256", name: "_collateralFromBonds" },
      { type: "uint256", name: "_leveragePercentageBPS" },
      { type: "bool", name: "buyTokens" },
      { type: "uint256", name: "minimumTokensToBuy" },
      { type: "uint256", name: "minimumTokensToBond" },
      { type: "uint256", name: "bondID" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "getCurrentUserLeverageBPS",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_userAddress" }],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getEarlyCloseOrDecreaseTaxBPS",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getEarlyCloseOrDecreaseTaxDeadline",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getFeesOwed",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_userAddress" }],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getFeesPaid",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_userAddress" }],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getIsMarketBuyingOfTokensAvalible",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "bool" }],
  },
  {
    type: "function",
    name: "getLeverageHolder",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_userAddress" }],
    outputs: [{ type: "address" }],
  },
  {
    type: "function",
    name: "getLiquidationPrice",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_userAddress" }],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getMaximumLeverageBPS",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getMaximumTokensAvalibleToBond",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      { type: "address", name: "_userAddress" },
      { type: "uint256", name: "desiredLeverageBPS" },
      { type: "uint256", name: "desiredCollateral" },
      { type: "uint256", name: "bondID" },
    ],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getMaximumTokensAvalibleToBuy",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      { type: "address", name: "_userAddress" },
      { type: "uint256", name: "desiredLeverageBPS" },
      { type: "uint256", name: "desiredCollateral" },
      { type: "uint256", name: "scalingBPS" },
    ],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getMaximumWETHAvalibleToBorrowByUser",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      { type: "address", name: "_userAddress" },
      { type: "uint256", name: "desiredCollateral" },
    ],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getMinimumTokensToLeverage",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getPosition",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_userAddress" }],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getTime",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getTimeStamp",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_userAddress" }],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getTotalTokensBondedUsingLeverage",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getTotalTokensInLeverageContract",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getTotalTokensPurchasedUsingLeverage",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getUnlockTime",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getWETHAvalibleToBorrow",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getWETHAvalibleToBorrowByUserAtLeverage",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      { type: "address", name: "_userAddress" },
      { type: "uint256", name: "desiredLeverageBPS" },
      { type: "uint256", name: "desiredCollateral" },
    ],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "getWETHOwed",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_userAddress" }],
    outputs: [{ type: "uint256" }],
  },
  {
    type: "function",
    name: "increaseCollateral",
    constant: false,
    payable: false,
    inputs: [
      { type: "uint256", name: "_collateralFromWallet" },
      { type: "uint256", name: "_collateralFromBonds" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "increaseLeverage",
    constant: false,
    payable: false,
    inputs: [
      { type: "uint256", name: "leveragePercentageBPS" },
      { type: "bool", name: "buyTokens" },
      { type: "uint256", name: "minimumTokensToBuy" },
      { type: "uint256", name: "minimumTokensToBond" },
      { type: "uint256", name: "bondID" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "isAssetManager",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_addr" }],
    outputs: [{ type: "bool" }],
  },
  {
    type: "function",
    name: "isEcosystem",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "_addr" }],
    outputs: [{ type: "bool" }],
  },
  {
    type: "function",
    name: "lock",
    constant: false,
    payable: false,
    inputs: [{ type: "uint256", name: "time" }],
    outputs: [],
  },
  {
    type: "function",
    name: "marketClosePosition",
    constant: false,
    payable: false,
    inputs: [],
    outputs: [],
  },
  {
    type: "function",
    name: "owner",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "address" }],
  },
  {
    type: "function",
    name: "renounceOwnership",
    constant: false,
    payable: false,
    inputs: [],
    outputs: [],
  },
  {
    type: "function",
    name: "setAddressesAndEcosystem",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "_mainTokenAddress" },
      { type: "address", name: "_dividendTrackerAddress" },
      { type: "address", name: "_priceFetcherAddress" },
      { type: "address", name: "_treasuryContractAddress" },
      { type: "address", name: "_taxManagerAddress" },
      { type: "address", name: "_bondDepositoryAddress" },
      { type: "address", name: "_secondServiceContractAddress" },
      { type: "address", name: "_thirdServiceContractAddress" },
      { type: "address", name: "_metricsTrackerAddress" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "transferOwnership",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "newOwner" }],
    outputs: [],
  },
  {
    type: "function",
    name: "unlock",
    constant: false,
    payable: false,
    inputs: [],
    outputs: [],
  },
  {
    type: "function",
    name: "updateBondDepoWalletAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newBondDepoWalletAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateBondDepositoryAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newBondDepositoryAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateDividendTrackerAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newDividendTrackerAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateLiquidityWalletAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newLiquidityWalletAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateMainContractAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newMainTokenAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateMarketingWalletAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newMarketingWalletAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updatePriceFetcherAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newPriceFetcherAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateSecondServiceContractAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newSecondServiceContractAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateSecondServiceWalletAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newSecondServiceWalletAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateTaxManagerAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newTaxManagerAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateThirdServiceWalletAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newThirdServiceWalletAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateTreasuryContractAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newTreasuryContractAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateTreasuryWalletAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newTreasuryWalletAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateUSDCAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newUSDCAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateUniswapFactoryAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newUniswapFactoryAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateUniswapPairAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newUniswapPairAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateUniswapRouterAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newUniswapRouterAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateWETHAddress",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newWETHAddress" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updatemetricsTracker",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "_newmetricsTrackerAddress" }],
    outputs: [],
  },
];
